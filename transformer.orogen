# frozen_string_literal: true

name "transformer"

using_library "transformer"
import_types_from "base"
import_types_from "BroadcastTypes.hpp"
import_types_from "transformer/TransformationStatus.hpp"
typekit do
    # This one is actually for the transformer plugin, but we want to avoid
    # adding a new package just for that
    export_types "/std/vector</base/samples/RigidBodyState>"
    export_types "/transformer/TransformerStatus"
end

# Task that allows to broadcast transformer information, mostly used for GUI
task_context "Task" do
    # Sets the configuration that should be broadcasted
    operation('setConfiguration').
        arg("configuration", "transformer/ConfigurationState")

    # Outputs a snapshot of all the port-to-frame associations declared at a
    # certain point in time. The port is declared so that
    #
    #   port_frame_associations.connect_to(input_port, :init => true)
    #
    # will send the last known state to the input port
    output_port "configuration_state", "transformer/ConfigurationState"
end

simple_deployment "transformer_broadcaster", "transformer::Task"
